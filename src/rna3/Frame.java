package rna3;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Polygon;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

public class Frame extends javax.swing.JFrame {

    SinglePattern singlepatterns;
    SinglePattern stimulus;
    SinglePattern flashback;
    MultiPattern multipatterns;
    AssociativeMemory AM;
    ImageIcon icon = new ImageIcon("ico.png");
    public Frame() 
    {
        initComponents();
        singlepatterns=new SinglePattern(PANELsinglepattern.getWidth(), 4);
        stimulus=new SinglePattern(PANELsinglepattern.getWidth(), 4);
        multipatterns=new MultiPattern(PANELsinglepattern.getWidth(), 4);
        AM=new AssociativeMemory(4);
        AM.learnpattern(singlepatterns);
        AM.p=AM.p-1;
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PANELsinglepattern = new javax.swing.JPanel();
        PANELmultipattern = new javax.swing.JPanel();
        BCLEAN = new javax.swing.JButton();
        BADD = new javax.swing.JButton();
        BRESET = new javax.swing.JButton();
        PANELreconstruction = new javax.swing.JPanel();
        PANELstimulus = new javax.swing.JPanel();
        Bstimulus = new javax.swing.JButton();
        BCLEANstimulus = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Memoria asociativa");
        setIconImage(icon.getImage());
        setResizable(false);

        PANELsinglepattern.setBackground(new java.awt.Color(255, 255, 255));
        PANELsinglepattern.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        PANELsinglepattern.setForeground(new java.awt.Color(204, 204, 204));
        PANELsinglepattern.setPreferredSize(new java.awt.Dimension(256, 256));
        PANELsinglepattern.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                PANELsinglepatternMousePressed(evt);
            }
        });

        javax.swing.GroupLayout PANELsinglepatternLayout = new javax.swing.GroupLayout(PANELsinglepattern);
        PANELsinglepattern.setLayout(PANELsinglepatternLayout);
        PANELsinglepatternLayout.setHorizontalGroup(
            PANELsinglepatternLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 254, Short.MAX_VALUE)
        );
        PANELsinglepatternLayout.setVerticalGroup(
            PANELsinglepatternLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 254, Short.MAX_VALUE)
        );

        PANELmultipattern.setBackground(new java.awt.Color(255, 255, 255));
        PANELmultipattern.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        PANELmultipattern.setForeground(new java.awt.Color(204, 204, 204));
        PANELmultipattern.setPreferredSize(new java.awt.Dimension(256, 256));

        javax.swing.GroupLayout PANELmultipatternLayout = new javax.swing.GroupLayout(PANELmultipattern);
        PANELmultipattern.setLayout(PANELmultipatternLayout);
        PANELmultipatternLayout.setHorizontalGroup(
            PANELmultipatternLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PANELmultipatternLayout.setVerticalGroup(
            PANELmultipatternLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 254, Short.MAX_VALUE)
        );

        BCLEAN.setBackground(new java.awt.Color(255, 255, 255));
        BCLEAN.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        BCLEAN.setText("Limpiar");
        BCLEAN.setFocusPainted(false);
        BCLEAN.setMaximumSize(new java.awt.Dimension(100, 23));
        BCLEAN.setPreferredSize(new java.awt.Dimension(80, 35));
        BCLEAN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCLEANActionPerformed(evt);
            }
        });

        BADD.setBackground(new java.awt.Color(255, 255, 255));
        BADD.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        BADD.setText("Agregar");
        BADD.setFocusPainted(false);
        BADD.setMaximumSize(new java.awt.Dimension(80, 23));
        BADD.setPreferredSize(new java.awt.Dimension(80, 35));
        BADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BADDActionPerformed(evt);
            }
        });

        BRESET.setBackground(new java.awt.Color(255, 255, 255));
        BRESET.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        BRESET.setForeground(new java.awt.Color(153, 0, 51));
        BRESET.setText("Reset");
        BRESET.setFocusPainted(false);
        BRESET.setPreferredSize(new java.awt.Dimension(200, 35));
        BRESET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BRESETActionPerformed(evt);
            }
        });

        PANELreconstruction.setBackground(new java.awt.Color(255, 255, 255));
        PANELreconstruction.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        PANELreconstruction.setForeground(new java.awt.Color(204, 204, 204));
        PANELreconstruction.setPreferredSize(new java.awt.Dimension(256, 256));

        javax.swing.GroupLayout PANELreconstructionLayout = new javax.swing.GroupLayout(PANELreconstruction);
        PANELreconstruction.setLayout(PANELreconstructionLayout);
        PANELreconstructionLayout.setHorizontalGroup(
            PANELreconstructionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 254, Short.MAX_VALUE)
        );
        PANELreconstructionLayout.setVerticalGroup(
            PANELreconstructionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 254, Short.MAX_VALUE)
        );

        PANELstimulus.setBackground(new java.awt.Color(255, 255, 255));
        PANELstimulus.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        PANELstimulus.setForeground(new java.awt.Color(204, 204, 204));
        PANELstimulus.setPreferredSize(new java.awt.Dimension(256, 256));
        PANELstimulus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                PANELstimulusMousePressed(evt);
            }
        });

        javax.swing.GroupLayout PANELstimulusLayout = new javax.swing.GroupLayout(PANELstimulus);
        PANELstimulus.setLayout(PANELstimulusLayout);
        PANELstimulusLayout.setHorizontalGroup(
            PANELstimulusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 254, Short.MAX_VALUE)
        );
        PANELstimulusLayout.setVerticalGroup(
            PANELstimulusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 254, Short.MAX_VALUE)
        );

        Bstimulus.setBackground(new java.awt.Color(255, 255, 255));
        Bstimulus.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        Bstimulus.setText("Estimular");
        Bstimulus.setFocusPainted(false);
        Bstimulus.setMaximumSize(new java.awt.Dimension(80, 23));
        Bstimulus.setPreferredSize(new java.awt.Dimension(80, 35));
        Bstimulus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Stimulate(evt);
            }
        });

        BCLEANstimulus.setBackground(new java.awt.Color(255, 255, 255));
        BCLEANstimulus.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        BCLEANstimulus.setText("Limpiar");
        BCLEANstimulus.setFocusPainted(false);
        BCLEANstimulus.setMaximumSize(new java.awt.Dimension(100, 23));
        BCLEANstimulus.setPreferredSize(new java.awt.Dimension(80, 35));
        BCLEANstimulus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StimulusBCLEAN(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Estimulo");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Patrones aprendidos");
        jLabel2.setMaximumSize(new java.awt.Dimension(64, 25));
        jLabel2.setMinimumSize(new java.awt.Dimension(64, 25));
        jLabel2.setPreferredSize(new java.awt.Dimension(64, 25));

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Patron de entrenamiento");
        jLabel3.setMaximumSize(new java.awt.Dimension(64, 25));
        jLabel3.setMinimumSize(new java.awt.Dimension(64, 25));
        jLabel3.setPreferredSize(new java.awt.Dimension(64, 25));

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Respuesta");

        jLabel5.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText(" ");
        jLabel5.setMaximumSize(new java.awt.Dimension(64, 25));
        jLabel5.setMinimumSize(new java.awt.Dimension(64, 25));
        jLabel5.setPreferredSize(new java.awt.Dimension(64, 25));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BCLEANstimulus, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Bstimulus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(PANELstimulus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PANELreconstruction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(PANELsinglepattern, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(BCLEAN, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(BADD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PANELmultipattern, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BRESET, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PANELmultipattern, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PANELsinglepattern, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BCLEAN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BADD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(BRESET, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PANELreconstruction, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PANELstimulus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Bstimulus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BCLEANstimulus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BRESETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BRESETActionPerformed
        multipatterns.reset();
        AM.reset();
        flashback=null;
        jLabel5.setText("");
        jLabel5.setEnabled(false);
        BRESET.setText("Reset");
        repaint();
    }//GEN-LAST:event_BRESETActionPerformed

    private void BCLEANActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCLEANActionPerformed
        singlepatterns.clean();
        repaint();
    }//GEN-LAST:event_BCLEANActionPerformed

    private void BADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BADDActionPerformed
        multipatterns.addpattern(singlepatterns);
        AM.learnpattern(singlepatterns);
        
        singlepatterns.clean();
        BRESET.setText("Reset ("+multipatterns.patterns.size()+")");
        repaint();
    }//GEN-LAST:event_BADDActionPerformed

    private void Stimulate(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Stimulate
        flashback=AM.stimulate(stimulus);
        int c=0;
        int e=16;
        for(SinglePattern s:multipatterns.patterns)
        {
            c=0;
            for(int i=0;i<s.sites.size();i++)//se presenta el patron a las neuronas
            {
                if(flashback.sites.get(i).getValue()!=s.sites.get(i).getValue())
                    c++;
                if(c>=4)
                    break;
            }
            if(c==0)
            {
                e=0;
                break;
            }
            if(c<=e)
                e=c;
                
        }
        
        if(AM.p==0)
        {
            jLabel5.setText("Aun no he aprendido nada");
            flashback=null;
        }
        else
            if(e>=4)
            {
                jLabel5.setText("Ese patron me confunde");
            }
            else
                    if(e==0)
                    {
                        for(int i=0;i<flashback.sites.size();i++)
                            if(stimulus.sites.get(i).getValue()!=flashback.sites.get(i).getValue())
                            {
                                jLabel5.setText("Eso me recuerda a este patron!");
                                break;
                            }
                            else
                            {
                                jLabel5.setText("Eso es este patron!");
                            }
                        
                    }
                    else
                    {
                        c=0;
                        for(Site s:flashback.sites)
                            if(s.getValue()==1)
                                c++;
                        if(c>0)
                            jLabel5.setText("Recuerdo algo parecido");
                        else
                            jLabel5.setText("Lo siento. Estoy en blanco");
                    }
            
        
        jLabel5.setEnabled(true);
        repaint();
    }//GEN-LAST:event_Stimulate

    private void StimulusBCLEAN(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StimulusBCLEAN
        stimulus.clean();
        repaint();
    }//GEN-LAST:event_StimulusBCLEAN

    private void PANELstimulusMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PANELstimulusMousePressed
        if(evt.getButton()==MouseEvent.BUTTON1)
            stimulus.click(evt.getX(), evt.getY());
        else
            if(evt.getButton()==MouseEvent.BUTTON3)
                stimulus.unclick(evt.getX(), evt.getY());
        repaint();
    }//GEN-LAST:event_PANELstimulusMousePressed

    private void PANELsinglepatternMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PANELsinglepatternMousePressed
        if(evt.getButton()==MouseEvent.BUTTON1)
            singlepatterns.click(evt.getX(), evt.getY());
        else
            if(evt.getButton()==MouseEvent.BUTTON3)
                singlepatterns.unclick(evt.getX(), evt.getY());
        repaint();
    }//GEN-LAST:event_PANELsinglepatternMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }
    
    @Override
    public void paint(Graphics g) 
    {
        super.paint(g);
        if(singlepatterns.cont>0)
            BADD.setEnabled(true);
        else
            BADD.setEnabled(false);
        if(stimulus.cont>0)
            Bstimulus.setEnabled(true);
        else
            Bstimulus.setEnabled(false);
        
        
        Graphics sh=PANELsinglepattern.getGraphics();
        Graphics mh=PANELmultipattern.getGraphics();
        Graphics ss=PANELstimulus.getGraphics();
        Graphics rs=PANELreconstruction.getGraphics();
        int atom=(int)multipatterns.l/multipatterns.n;
        
        for(int i=0;i<multipatterns.n;i++)
            for(int j=0;j<multipatterns.n;j++)
                if(multipatterns.patterns.size()>(multipatterns.n*j)+i)
                {
                    SinglePattern s=multipatterns.patterns.get((multipatterns.n*j)+i);
                    for(int si=0;si<s.n;si++)
                        for(int sj=0;sj<s.n;sj++)
                            if(s.sites.get((singlepatterns.n*si)+sj).getValue()==1)
                            {
                                Polygon ms=new Polygon();
                                ms.addPoint(i*atom+si*atom/multipatterns.n, j*atom+sj*atom/multipatterns.n);
                                ms.addPoint(i*atom+si*atom/multipatterns.n, j*atom+sj*atom/multipatterns.n + atom/multipatterns.n);
                                ms.addPoint(i*atom+si*atom/multipatterns.n + atom/multipatterns.n, j*atom+sj*atom/multipatterns.n + atom/multipatterns.n);
                                ms.addPoint(i*atom+si*atom/multipatterns.n + atom/multipatterns.n, j*atom+sj*atom/multipatterns.n);
                                mh.fillPolygon(ms);
                            }
                        
                }
        if(flashback!=null)
        {
            atom=flashback.l/flashback.n;
            for(Site s:flashback.sites)
            {
                if(s.getValue()==1)
                {
                    rs.setColor(flashback.c);
                    rs.fillPolygon(s);
                }
            }
        }
        
        
        atom=(int)atom/multipatterns.n;
        for(int i=1;i<multipatterns.n*multipatterns.n;i++)
        {
            mh.setColor(Color.white);
            mh.drawLine(i*atom, 1, i*atom, multipatterns.l-2);
            mh.drawLine(1, i*atom, multipatterns.l-2,i*atom);
        }
        
        atom=(int)multipatterns.l/multipatterns.n;
        for(int i=1;i<multipatterns.n;i++)
        {
            mh.setColor(Color.LIGHT_GRAY);
            mh.drawLine(i*atom+1, 1, i*atom+1, multipatterns.l-2);
            mh.drawLine(1, i*atom+1, multipatterns.l-2,i*atom+1);
            mh.drawLine(i*atom-1, 1, i*atom-1, multipatterns.l-2);
            mh.drawLine(1, i*atom-1, multipatterns.l-2,i*atom-1);
        }
        for(int i=1;i<multipatterns.n;i++)
        {
            mh.setColor(new java.awt.Color(199, 69, 89));
            mh.drawLine(i*atom, 1, i*atom, singlepatterns.l-2);
            mh.drawLine(1, i*atom, singlepatterns.l-2,i*atom);
        }
        
        
        
        
        
        atom=singlepatterns.l/singlepatterns.n;
        for(Site s:singlepatterns.sites)
        {
            if(s.getValue()==1)
            {
                sh.setColor(singlepatterns.c);
                sh.fillPolygon(s);
            }
        }
        
        
        atom=stimulus.l/stimulus.n;
        for(Site s:stimulus.sites)
        {
            if(s.getValue()==1)
            {
                ss.setColor(stimulus.c);
                ss.fillPolygon(s);
            }
        }
        
        for(int i=1;i<singlepatterns.n;i++)
        {
            sh.setColor(Color.LIGHT_GRAY);
            sh.drawLine(i*atom, 0, i*atom, singlepatterns.l);
            sh.drawLine(0, i*atom, singlepatterns.l,i*atom);
            ss.setColor(Color.LIGHT_GRAY);
            ss.drawLine(i*atom, 0, i*atom, stimulus.l);
            ss.drawLine(0, i*atom, stimulus.l,i*atom);
            rs.setColor(Color.LIGHT_GRAY);
            rs.drawLine(i*atom, 0, i*atom, singlepatterns.l);
            rs.drawLine(0, i*atom, singlepatterns.l,i*atom);
        }
        
        atom=(int)stimulus.l/stimulus.n;
        for(int i=1;i<stimulus.n;i++)
        {
            
            ss.drawLine(i*atom+1, 1, i*atom+1, stimulus.l-2);
            ss.drawLine(1, i*atom+1, stimulus.l-2,i*atom+1);
            ss.drawLine(i*atom-1, 1, i*atom-1, stimulus.l-2);
            ss.drawLine(1, i*atom-1, stimulus.l-2,i*atom-1);
        }
        for(int i=1;i<stimulus.n;i++)
        {
            ss.setColor(new java.awt.Color(0, 150, 215));
            ss.drawLine(i*atom, 1, i*atom, stimulus.l-2);
            ss.drawLine(1, i*atom, stimulus.l-2,i*atom);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BADD;
    private javax.swing.JButton BCLEAN;
    private javax.swing.JButton BCLEANstimulus;
    private javax.swing.JButton BRESET;
    private javax.swing.JButton Bstimulus;
    private javax.swing.JPanel PANELmultipattern;
    private javax.swing.JPanel PANELreconstruction;
    private javax.swing.JPanel PANELsinglepattern;
    private javax.swing.JPanel PANELstimulus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
